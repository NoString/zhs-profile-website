.bg-primary {
  background: #F8F7F1;
}
.innerWidth {
  width: 100%;
}
@media (min-width: 1536px) {
  .innerWidth {
    max-width: 1280px;
    margin: auto;
  }
}
.paddings {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
@media (min-width: 640px) {
  .paddings {
    padding: 4rem;
  }
}
@media (min-width: 1280px), (min-width: 768px) {
  .paddings {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
}
.xPaddings {
  padding-left: 1.5rem;
  /* 24px */
  padding-right: 1.5rem;
  /* 24px */
}
@media (min-width: 640px) {
  .xPaddings {
    padding-left: 4rem;
    padding-right: 4rem;
  }
}
.yPaddings {
  padding-top: 3rem;
  padding-bottom: 3rem;
}
@media (min-width: 640px) {
  .yPaddings {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}
@media (min-width: 1280px) {
  .yPaddings {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
}
.topPaddings {
  padding-top: 3rem;
}
@media (min-width: 640px) {
  .topPaddings {
    padding-top: 4rem;
  }
}
@media (min-width: 1280px) {
  .topPaddings {
    padding-top: 2rem;
  }
}
.bottomPaddings {
  padding-bottom: 3rem;
}
@media (min-width: 640px) {
  .bottomPaddings {
    padding-bottom: 4rem;
  }
}
@media (min-width: 1280px) {
  .bottomPaddings {
    padding-bottom: 2rem;
  }
}
.flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}
.flexStart {
  display: flex;
  justify-content: start;
  align-items: center;
}
.flexEnd {
  display: flex;
  justify-items: end;
}
.primaryText {
  font-size: 3rem;
  font-weight: bold;
}
@media (max-width: 640px) {
  .primaryText {
    font-size: 2.5rem;
  }
}
.secondaryText {
  line-height: 50px;
  font-size: 1.3rem;
  font-weight: 500;
}
@media (max-width: 640px) {
  .secondaryText {
    font-size: 1.1rem;
    line-height: 40px;
  }
}
.anchor {
  display: block;
  position: relative;
  top: -100px;
  visibility: hidden;
}
.wrapper {
  z-index: 99;
  transform: none;
  position: sticky;
  top: 0;
  transition: all 300ms ease;
}
.wrapper .container {
  position: relative;
  justify-content: space-between;
  font-weight: 500;
  z-index: 999;
}
.wrapper .container .mainIcon {
  display: none;
}
@media (max-width: 640px), (max-width: 768px) {
  .wrapper .container .mainIcon {
    display: block;
  }
}
.wrapper .container .name {
  font-size: 1.5rem;
  font-weight: 500;
}
.wrapper .container .menu {
  text-transform: uppercase;
  font-size: 1rem;
  list-style: none;
  gap: 1.5rem;
  cursor: pointer;
}
@media (max-width: 640px), (max-width: 768px) {
  .wrapper .container .menu {
    position: fixed;
    list-style: none;
    gap: 2rem;
    font-weight: 500;
    flex-direction: column;
    right: 0;
    top: 2rem;
    width: 50%;
    min-width: 12rem;
    background: white;
    padding: 3rem;
    display: flex;
    border-radius: 2rem;
    transition: all 300ms ease;
    align-items: flex-start;
    justify-content: flex-start;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.05);
    margin-top: 2rem;
    margin-right: 1rem;
    z-index: 99;
  }
}
.wrapper .container .menu .phone {
  gap: 1.2rem;
  flex-wrap: wrap;
}
.wrapper .container .menu svg {
  color: #286F6C;
  background: white;
  border-radius: 999px;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
  padding: 10px;
}
.wrapper .container .menu li {
  /**
        & 表示在嵌套层次中回溯一层，即
        &:hover相当于.li:hover
         */
}
.wrapper .container .menu li a {
  color: inherit;
  text-decoration: none;
}
.wrapper .container .menu li:hover {
  color: #286F6C;
}
/*# sourceMappingURL=index.css.map */